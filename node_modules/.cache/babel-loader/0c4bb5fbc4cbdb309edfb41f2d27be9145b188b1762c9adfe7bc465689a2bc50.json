{"ast":null,"code":"var _jsxFileName = \"D:\\\\coding\\\\Projects\\\\MERN stack inotebook project\\\\inotebook\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport NoteContext from \"./noteContext\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial);\n  // Get all Notes\n  const getNotes = async () => {\n    // API Call \n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjYwMjhhMGUxZjJiNDJhOGQ1YjFlMTg1In0sImlhdCI6MTcxMTQ0MjQ0Nn0.GxB4B9cqgOdkgk2dUdOjq_vkfl0qqRfyWKTCxGlPC4Q\"\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setNotes(json);\n  };\n  // Add a Note\n  const addNote = async (title, description, tag) => {\n    // TODO: API Call\n    // API Call \n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjYwMjhhMGUxZjJiNDJhOGQ1YjFlMTg1In0sImlhdCI6MTcxMTQ0MjQ0Nn0.GxB4B9cqgOdkgk2dUdOjq_vkfl0qqRfyWKTCxGlPC4Q\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    console.log(\"Adding a new note\");\n    const note = {\n      \"_id\": \"61322f119553781a8ca8d0e08\",\n      \"user\": \"6131dc5e3e4037cd4734a0664\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"date\": \"2021-09-03T14:20:09.668Z\",\n      \"__v\": 0\n    };\n    setNotes(notes.concat(note));\n  };\n\n  // Delete a Note\n  const deleteNote = id => {\n    // TODO: API Call\n    const deleteNote = async id => {\n      // API Call\n      const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          \"auth-token\": \"eyJhbGciiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjYwMjhhMGUxZjJiNDJhOGQ1YjFlMTg1In0sImlhdCI6MTcxMTQ0MjQ0Nn0.GxB4B9cqgOdkgk2dUdOjq_vkfl0qqRfyWKTCxGlPC4Q\"\n        }\n      });\n      const json = response.json();\n      console.log(json);\n      console.log(\"Deleting the note with id\" + id);\n      const newNotes = notes.filter(note => {\n        return note._id !== id;\n      });\n      setNotes(newNotes);\n    };\n\n    // Edit a Note\n    const editNote = async (id, title, description, tag) => {\n      // API Call \n      const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          \"auth-token\": \"eyJhbGciiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjYwMjhhMGUxZjJiNDJhOGQ1YjFlMTg1In0sImlhdCI6MTcxMTQ0MjQ0Nn0.GxB4B9cqgOdkgk2dUdOjq_vkfl0qqRfyWKTCxGlPC4Q\"\n        },\n        body: JSON.stringify({\n          title,\n          description,\n          tag\n        })\n      });\n      const json = response.json();\n      // Logic to edit in client\n      for (let index = 0; index < notes.length; index++) {\n        const element = notes[index];\n        if (element._id === id) {\n          element.title = title;\n          element.description = description;\n          element.tag = tag;\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n      value: {\n        notes,\n        addNote,\n        deleteNote,\n        editNote,\n        getNotes\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this);\n  };\n};\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["NoteContext","useState","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesInitial","notes","setNotes","getNotes","response","fetch","method","headers","json","console","log","addNote","title","description","tag","body","JSON","stringify","note","concat","deleteNote","id","newNotes","filter","_id","editNote","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/coding/Projects/MERN stack inotebook project/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import NoteContext from \"./noteContext\";\r\nimport { useState } from \"react\";\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:5000\"\r\n  const notesInitial = []\r\n  const [notes, setNotes] = useState(notesInitial)\r\n  // Get all Notes\r\n  const getNotes = async () => {\r\n    // API Call \r\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"auth-token\": \"eyJhbGciiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjYwMjhhMGUxZjJiNDJhOGQ1YjFlMTg1In0sImlhdCI6MTcxMTQ0MjQ0Nn0.GxB4B9cqgOdkgk2dUdOjq_vkfl0qqRfyWKTCxGlPC4Q\"\r\n      }\r\n    });\r\n    const json = await response.json()\r\n    console.log(json)\r\n    setNotes(json)\r\n  }\r\n  // Add a Note\r\n  const addNote = async (title, description, tag) => {\r\n    // TODO: API Call\r\n    // API Call \r\n    const response = await fetch(`${host}/api/notes/addnote`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"auth-token\": \"eyJhbGciiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjYwMjhhMGUxZjJiNDJhOGQ1YjFlMTg1In0sImlhdCI6MTcxMTQ0MjQ0Nn0.GxB4B9cqgOdkgk2dUdOjq_vkfl0qqRfyWKTCxGlPC4Q\"\r\n      },\r\n      body: JSON.stringify({title, description, tag})\r\n    });\r\n     \r\n    console.log(\"Adding a new note\")\r\n    const note = {\r\n      \"_id\": \"61322f119553781a8ca8d0e08\",\r\n      \"user\": \"6131dc5e3e4037cd4734a0664\",\r\n      \"title\": title,\r\n      \"description\": description,\r\n      \"tag\": tag,\r\n      \"date\": \"2021-09-03T14:20:09.668Z\",\r\n      \"__v\": 0\r\n    };\r\n    setNotes(notes.concat(note))\r\n  }\r\n\r\n  // Delete a Note\r\n  const deleteNote = (id) => {\r\n    // TODO: API Call\r\n  const deleteNote = async (id) => {\r\n    // API Call\r\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"auth-token\": \"eyJhbGciiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjYwMjhhMGUxZjJiNDJhOGQ1YjFlMTg1In0sImlhdCI6MTcxMTQ0MjQ0Nn0.GxB4B9cqgOdkgk2dUdOjq_vkfl0qqRfyWKTCxGlPC4Q\"\r\n      }\r\n    });\r\n    const json = response.json();\r\n    console.log(json)\r\n\r\n    console.log(\"Deleting the note with id\" + id);\r\n    const newNotes = notes.filter((note) => { return note._id !== id })\r\n    setNotes(newNotes)\r\n  }\r\n\r\n  // Edit a Note\r\n  const editNote = async (id, title, description, tag) => {\r\n    // API Call \r\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"auth-token\": \"eyJhbGciiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjYwMjhhMGUxZjJiNDJhOGQ1YjFlMTg1In0sImlhdCI6MTcxMTQ0MjQ0Nn0.GxB4B9cqgOdkgk2dUdOjq_vkfl0qqRfyWKTCxGlPC4Q\"\r\n      },\r\n      body: JSON.stringify({title, description, tag})\r\n    });\r\n    const json = response.json();\r\n    // Logic to edit in client\r\n    for (let index = 0; index < notes.length; index++) {\r\n      const element = notes[index];\r\n      if (element._id === id) {\r\n        element.title = title;\r\n        element.description = description;\r\n        element.tag = tag;\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNotes }}>\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  )\r\n}\r\n}\r\nexport default NoteState;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}